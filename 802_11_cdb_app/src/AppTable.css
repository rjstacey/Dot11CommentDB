.Table {
	margin: 0 auto;
	align-items: center;
}
.headerRow,
.evenRow,
.oddRow {
	display: flex;
	flex-direction: row;
	align-items: top;
	box-sizing: border-box;
}
:local(.headerRow) {
	font-weight: bold;
	font-size: 0.9em;
}
.oddRow {
	background-color: #f6f6f6;
}
.oddRow:focus {
	background-color: #f0f0f0;
}
.headerColumn {
	display: flex;
	flex-direction: row;
	text-transform: none;
	background-color: #fafafa;
}
.rowColumn {
	padding: 2px;
	box-sizing: border-box;
}
.noRows {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 1em;
	color: #bdbdbd;
}

.headerWithDrag {
	display: flex;
	flex-direction: column;
	flex: 0 0 calc(100% - 12px);
}
.headerLabel {
	display: block;
	user-select: none;
	position: relative;
}
.headerLabelSort {
	cursor: pointer;
}
.headerLabelIcon {
	position: absolute;
	right: 0;
	top: 2px;
}
.headerLabelItem {
	display: inline-block;
	white-space: nowrap;
	overflow: hidden;
	width: 100%;
}
.headerLabelItemTrucate {
	width: calc(100% - 12px);
}
.headerFilt {
	background-color: #ffffff;
	border: 1px solid #ddd;
	padding: 0;
	font-weight: 100;
	box-sizing: border-box;
	width: 100%;
	background-color: white;
}
.headerFiltInvalid {
	background-color: red
}
.headerFilt:placeholder-shown {
	background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 22 22' %3E%3Cpath fill-opacity='.2' d='m 0,0 7.5,11.25 0,7.5 2.5,3.75 0,-11.25 7.5,-11.25 Z'%3E%3C/path%3E%3C/svg%3E") right / contain no-repeat;
	background-color: white;
}

.headerDrag {
	flex: 0 0 12px;
	/*z-index: 2;*/
	cursor: col-resize;
	color: #0085ff;
}
.headerLabel:hover,
.headerDrag:hover {
	background-color: rgba(0, 0, 0, 0.1);
}
.dragHandleActive,
.dragHandleActive:hover {
	color: #0b6fcc;
	/*z-index: 3;*/
}
.dragHandleIcon {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.evenRow .actionColumn,
.oddRow .actionColumn,
.rowColumn .actionCell {
	visibility: hidden;
}
.evenRow:hover .actionColumn,
.oddRow:hover .actionColumn,
.rowColumn:hover .actionCell {
	visibility: visible;
}

/* Override input type=checkbox to customize the checkbox */
.checkbox {
	-webkit-appearance: none;
	background-color: #fafafa;
	border: 1px solid #cacece;
	/*box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05);*/
	padding: 6px;
	/*border-radius: 3px;*/
	display: inline-block;
	position: relative;
}

.checkbox:active,
.checkbox:checked:active {
	/*box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px 1px 3px rgba(0,0,0,0.1);*/
}

.checkbox:checked {
	background-color: #e9ecee;
	border: 1px solid #adb8c0;
	/*box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05), inset 15px 10px -12px rgba(255,255,255,0.1);*/
	/*color: #99a1a7;*/
}
.checkbox:indeterminate {
	background-color: #e9ecee;
	border: 1px solid #adb8c0;
	/*box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05), inset 15px 10px -12px rgba(255,255,255,0.1);*/
	/*color: #99a1a7;*/
}

.checkbox:checked:after {
	content: '\2714';
	font-size: 10px;
	font-weight: 700;
	position: absolute;
	top: -1px;
	left: 1px;
}
.checkbox:indeterminate:after {
	content: "";
	position: absolute;
	top: 1px;
	left: 1px;
	border: 5px solid #5f6061;
}

/* Override input type=checkbox to customize a expand/collapse icon */
.expandable {
	-webkit-appearance: none;
	background-color: #fafafa;
	display: inline-block;
	position: relative;

	border-top: 6px solid transparent;
	border-bottom: 6px solid transparent;
	border-left: 6px solid currentColor;

	transform: translateY(-2px);
}

.expandable:checked {
	transform: rotate(90deg) translateX(-3px);
}

/* Override input type=checkbox to customize a expand/collapse icon */
.doubleExpandable {
	-webkit-appearance: none;
	background-color: #fafafa;
	display: inline-block;
	position: relative;
	height: 12px;

	border-top: 6px solid transparent;
	border-bottom: 6px solid transparent;
	border-left: 6px solid currentColor;
}
.doubleExpandable:after {
	content: "";
	position: absolute;
	top: -6px;
	left: -2px;
	border-top: 6px solid transparent;
	border-bottom: 6px solid transparent;
	border-left: 6px solid currentColor;
}
.doubleExpandable:checked {
	transform: rotate(90deg) translateX(-3px);
}
